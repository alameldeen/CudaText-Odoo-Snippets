name=Odoo Field All Attributes
id=ofallattributes
lex=Python
text=
string="${1:String}",
help="${2:Tooltip}"
readonly=True,
required=True,
index=True,
default=${3:DefaultValue},
states="${40:{'readonly':$42, 'required':$43, 'invisible':$44}}"
groups="${5:comma-separated list of group xml ids}"
copy=True
store=True
oldname="${6:String}"  # migration rename
auto_join=True # Many2one
comodel_name="${5:ComodelName}" # Many2One
delegate=True,  # Many2One - corresponds to _inherits
ondelete="${51:set null|restrict|cascade}" # Many2One
domain="[(${31:field}, ${32:=}, $33)$34]" # Many2one
context={"${41:key}": ${42:value}} # Many2One
size=${7:int}  # supported by: Char
translate=${8:True|Callable}  # supported by: Char
related="${9:sequence of field names}"
related_sudo="${10:sequence of field names}"
company_dependent=True
company_sudo=True
sparse="the name of the field where the value of this field must be stored"}
inverse_name='${31:inverse_name}_id',${32:  # must be a Many2one, not mandatory if related field or field extensions}
limit=${71:int},${72:  # optional} # Many2one, One2Many and Many2Many
relation='${31:table_name}',${39:  # optional, autogenerated} # Many2Many
column1='${34:column_local}',${39:  # optional, autogenerated} # Many2Many
column2='${37:column_foreign}',${39:  # optional, autogenerated} # Many2Many
compute='_compute_${5:fieldname}'
inverse='_inverse_${5:fieldname}'
search='_search_${5:fieldname}'

${20}